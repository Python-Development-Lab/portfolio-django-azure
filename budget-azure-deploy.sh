#!/bin/bash
# =============================================================================
# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ë–Æ–î–ñ–ï–¢–ù–û–á —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ Azure –¥–ª—è Django –¥–æ–¥–∞—Ç–∫—É
# –í–∞—Ä—Ç—ñ—Å—Ç—å: ~$20-25/–º—ñ—Å—è—Ü—å
# =============================================================================

set -e  # –ó—É–ø–∏–Ω–∏—Ç–∏ —Å–∫—Ä–∏–ø—Ç –ø—Ä–∏ –ø–æ–º–∏–ª—Ü—ñ

# –ö–æ–ª—å–æ—Ä–∏ –¥–ª—è –≤–∏–≤–æ–¥—É
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
CYAN='\033[0;36m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –ª–æ–≥—É–≤–∞–Ω–Ω—è
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
    exit 1
}

warning() {
    echo -e "${YELLOW}[WARNING]${NC} $1"
}

info() {
    echo -e "${CYAN}[INFO]${NC} $1"
}

# =============================================================================
# –ë–Æ–î–ñ–ï–¢–ù–ê –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø - –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –î–õ–Ø –ú–Ü–ù–Ü–ú–ê–õ–¨–ù–ò–• –í–ò–¢–†–ê–¢
# =============================================================================

# –û—Å–Ω–æ–≤–Ω—ñ –ø–∞—Ä–∞–º–µ—Ç—Ä–∏
PROJECT_NAME="django-app"
ENVIRONMENT="budget"              # budget, dev, staging, production
LOCATION="West Europe"
TIMESTAMP=$(date +%s)

# –Ü–º–µ–Ω–∞ —Ä–µ—Å—É—Ä—Å—ñ–≤
RESOURCE_GROUP_NAME="${PROJECT_NAME}-${ENVIRONMENT}-rg"
APP_SERVICE_PLAN_NAME="${PROJECT_NAME}-${ENVIRONMENT}-plan"
WEB_APP_NAME="${PROJECT_NAME}-${ENVIRONMENT}-${TIMESTAMP}"
DATABASE_SERVER_NAME="${PROJECT_NAME}-${ENVIRONMENT}-db-${TIMESTAMP}"
DATABASE_NAME="${PROJECT_NAME}_db"
STORAGE_ACCOUNT_NAME="djapp$(date +%s | tail -c 8)"
KEY_VAULT_NAME="djapp-kv-$(date +%s | tail -c 6)"
APP_INSIGHTS_NAME="${PROJECT_NAME}-${ENVIRONMENT}-insights"


# üí∞ –ë–Æ–î–ñ–ï–¢–ù–ê –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø
#APP_SERVICE_SKU="F1"              # üÜì –ë–ï–ó–ö–û–®–¢–û–í–ù–û (–∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º–∏)
#PYTHON_VERSION="3.11"
#DB_SKU="Standard_B1ms"            # üíµ $12-15/–º—ñ—Å—è—Ü—å (1 vCore, 2GB RAM)
#DB_STORAGE_SIZE="32"              # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä
#STORAGE_SKU="Standard_LRS"        # –ù–∞–π–¥–µ—à–µ–≤—à–∏–π —Ç–∏–ø —Å—Ö–æ–≤–∏—â–∞


# üí∞ –í–ò–ü–†–ê–í–õ–ï–ù–ê –ë–Æ–î–ñ–ï–¢–ù–ê –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø
APP_SERVICE_SKU="F1"              # üÜì –ë–ï–ó–ö–û–®–¢–û–í–ù–û (–∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º–∏)
PYTHON_VERSION="3.11"

# üîß –í–ò–ü–†–ê–í–õ–ï–ù–ù–Ø PostgreSQL –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
DB_SKU="Standard_B1ms"            # ‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∏–π SKU –¥–ª—è Burstable
DB_TIER="Burstable"               # ‚úÖ –î–û–î–ê–ù–û: Burstable tier (~$7-12/–º—ñ—Å—è—Ü—å)
DB_STORAGE_SIZE="32"              # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π —Ä–æ–∑–º—ñ—Ä
STORAGE_SKU="Standard_LRS"        # –ù–∞–π–¥–µ—à–µ–≤—à–∏–π —Ç–∏–ø —Å—Ö–æ–≤–∏—â–∞


# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö
DB_ADMIN_USER="djangoadmin"
DB_ADMIN_PASSWORD="$(openssl rand -base64 32 | tr -d '=/+' | cut -c1-16)Aa1!"

# –¢–µ–≥–∏ –¥–ª—è —Ä–µ—Å—É—Ä—Å—ñ–≤
TAGS="Environment=${ENVIRONMENT} Project=${PROJECT_NAME} CreatedBy=AzureCLI CostProfile=Budget"

echo ""
echo -e "${BLUE}============================================${NC}"
echo -e "${BLUE}üí∞ –ë–Æ–î–ñ–ï–¢–ù–ê AZURE INFRASTRUCTURE${NC}"
echo -e "${BLUE}============================================${NC}"
echo -e "${CYAN}–û—Ä—ñ—î–Ω—Ç–æ–≤–Ω–∞ –≤–∞—Ä—Ç—ñ—Å—Ç—å: $20-25/–º—ñ—Å—è—Ü—å${NC}"
echo ""
#echo "üìä –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:"
#echo "  üöÄ App Service: F1 (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ)"
#echo "  üóÑÔ∏è  Database: Standard_B1ms (~$12-15)"
#echo "  üíæ Storage: Standard_LRS (~$2-5)"
#echo "  üîê Key Vault: ~$1"
#echo "  üìà App Insights: –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ (–¥–æ 5GB)"


# –û–Ω–æ–≤–ª–µ–Ω–∏–π –≤–∏–≤—ñ–¥ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó:
echo "üìä –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è:"
echo "  üöÄ App Service: F1 (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ)"
echo "  üóÑÔ∏è  Database: Standard_B1ms Burstable (~$7-12)"  # ‚úÖ –í–∏–ø—Ä–∞–≤–ª–µ–Ω–æ
echo "  üíæ Storage: Standard_LRS (~$2-5)"
echo "  üîê Key Vault: ~$1"
echo "  üìà App Insights: –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ (–¥–æ 5GB)"
echo ""
echo "üí∞ –ó–ê–ì–ê–õ–¨–ù–ê –í–ê–†–¢–Ü–°–¢–¨: ~$10-18/–º—ñ—Å—è—Ü—å" 
echo ""

log "–ü–æ—á–∞—Ç–æ–∫ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –ë–Æ–î–ñ–ï–¢–ù–û–á —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏ –¥–ª—è Django –¥–æ–¥–∞—Ç–∫—É..."
log "–ü—Ä–æ–µ–∫—Ç: ${PROJECT_NAME}"
log "–°–µ—Ä–µ–¥–æ–≤–∏—â–µ: ${ENVIRONMENT}"
log "–†–µ–≥—ñ–æ–Ω: ${LOCATION}"



# =============================================================================
# –ü–ï–†–ï–í–Ü–†–ö–ê –ó–ê–õ–ï–ñ–ù–û–°–¢–ï–ô
# =============================================================================

log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç–µ–π..."

if ! command -v az &> /dev/null; then
    error "Azure CLI –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ. –í—Å—Ç–∞–Ω–æ–≤—ñ—Ç—å –π–æ–≥–æ –∑ https://docs.microsoft.com/en-us/cli/azure/install-azure-cli"
fi

if ! az account show &> /dev/null; then
    error "–í–∏ –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≤ Azure CLI. –í–∏–∫–æ–Ω–∞–π—Ç–µ 'az login'"
fi

if ! command -v openssl &> /dev/null; then
    error "OpenSSL –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ"
fi

log "‚úÖ –í—Å—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ñ"

# =============================================================================
# –ü–û–ö–†–û–ö–û–í–ò–ô –ê–õ–ì–û–†–ò–¢–ú –°–¢–í–û–†–ï–ù–ù–Ø –†–ï–°–£–†–°–Ü–í
# =============================================================================

info "üîÑ –ö–†–û–ö 1/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Resource Group"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Resource Group: ${RESOURCE_GROUP_NAME}"
az group create \
    --name "$RESOURCE_GROUP_NAME" \
    --location "$LOCATION" \
    --tags $TAGS

info "üîÑ –ö–†–û–ö 2/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Storage Account (–±—é–¥–∂–µ—Ç–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è)"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Storage Account: ${STORAGE_ACCOUNT_NAME}"
az storage account create \
    --name "$STORAGE_ACCOUNT_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --location "$LOCATION" \
    --sku "$STORAGE_SKU" \
    --kind StorageV2 \
    --access-tier Hot \
    --tags $TAGS

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ —Ç–∞ –º–µ–¥—ñ–∞
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä—ñ–≤ –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤"
STORAGE_KEY=$(az storage account keys list \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --account-name "$STORAGE_ACCOUNT_NAME" \
    --query '[0].value' \
    --output tsv)

az storage container create \
    --name "static" \
    --account-name "$STORAGE_ACCOUNT_NAME" \
    --account-key "$STORAGE_KEY" \
    --public-access blob

az storage container create \
    --name "media" \
    --account-name "$STORAGE_ACCOUNT_NAME" \
    --account-key "$STORAGE_KEY" \
    --public-access blob




# =============================================================================
# –í–ò–ü–†–ê–í–õ–ï–ù–ê –ö–û–ú–ê–ù–î–ê –°–¢–í–û–†–ï–ù–ù–Ø POSTGRESQL
# =============================================================================

info "üîÑ –ö–†–û–ö 3/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è PostgreSQL Database (–±—é–¥–∂–µ—Ç–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è)"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è PostgreSQL —Å–µ—Ä–≤–µ—Ä–∞: ${DATABASE_SERVER_NAME}"
warning "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –Ω–∞–π–¥–µ—à–µ–≤—à–∏–π SKU: $DB_SKU –≤ $DB_TIER tier"

# ‚úÖ –ü–†–ê–í–ò–õ–¨–ù–ê –∫–æ–º–∞–Ω–¥–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è PostgreSQL Flexible Server
az postgres flexible-server create \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --name "$DATABASE_SERVER_NAME" \
    --location "$LOCATION" \
    --admin-user "$DB_ADMIN_USER" \
    --admin-password "$DB_ADMIN_PASSWORD" \
    --sku-name "$DB_SKU" \
    --tier "$DB_TIER" \
    --storage-size "$DB_STORAGE_SIZE" \
    --version 14 \
    --public-access 0.0.0.0 \
    --tags $TAGS

# –ê–õ–¨–¢–ï–†–ù–ê–¢–ò–í–ê: –Ø–∫—â–æ --tier –Ω–µ –ø—Ä–∞—Ü—é—î, –≤–∏–∫–æ—Ä–∏—Å—Ç–∞—Ç–∏ —Ü—é –∫–æ–º–∞–Ω–¥—É:
# az postgres flexible-server create \
#     --resource-group "$RESOURCE_GROUP_NAME" \
#     --name "$DATABASE_SERVER_NAME" \
#     --location "$LOCATION" \
#     --admin-user "$DB_ADMIN_USER" \
#     --admin-password "$DB_ADMIN_PASSWORD" \
#     --sku-name "Standard_B1ms" \
#     --storage-size 32 \
#     --version 14 \
#     --public-access 0.0.0.0 \
#     --tier Burstable \
#     --tags Environment=budget Project=django-app CreatedBy=AzureCLI CostProfile=Budget



info "üîÑ –ö–†–û–ö 4/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö: ${DATABASE_NAME}"
az postgres flexible-server db create \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --server-name "$DATABASE_SERVER_NAME" \
    --database-name "$DATABASE_NAME"

info "üîÑ –ö–†–û–ö 5/11: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è firewall –ø—Ä–∞–≤–∏–ª"
log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è firewall –ø—Ä–∞–≤–∏–ª –¥–ª—è –±–∞–∑–∏ –¥–∞–Ω–∏—Ö"
az postgres flexible-server firewall-rule create \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --name "$DATABASE_SERVER_NAME" \
    --rule-name "AllowAzureServices" \
    --start-ip-address 0.0.0.0 \
    --end-ip-address 0.0.0.0

info "üîÑ –ö–†–û–ö 6/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Key Vault"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Key Vault: ${KEY_VAULT_NAME}"
az keyvault create \
    --name "$KEY_VAULT_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --location "$LOCATION" \
    --enable-rbac-authorization false \
    --tags $TAGS

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ Key Vault
log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ø—Ä–∞–≤ –¥–æ—Å—Ç—É–ø—É –¥–æ Key Vault"
az keyvault set-policy \
    --name "$KEY_VAULT_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --object-id "$(az ad signed-in-user show --query id --output tsv)" \
    --secret-permissions get list set delete

info "üîÑ –ö–†–û–ö 7/11: –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–µ–∫—Ä–µ—Ç—ñ–≤ –¥–æ Key Vault"
log "–ì–µ–Ω–µ—Ä–∞—Ü—ñ—è —Ç–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è —Å–µ–∫—Ä–µ—Ç—ñ–≤"
DJANGO_SECRET_KEY=$(openssl rand -base64 50 | tr -d '=/+')

# –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–µ–∫—Ä–µ—Ç—ñ–≤ –∑ –ø–µ—Ä–µ–≤—ñ—Ä–∫–æ—é –ø–æ–º–∏–ª–æ–∫
if az keyvault secret set \
    --vault-name "$KEY_VAULT_NAME" \
    --name "django-secret-key" \
    --value "$DJANGO_SECRET_KEY" >/dev/null 2>&1; then
    log "‚úÖ Django secret key –¥–æ–¥–∞–Ω–æ"
else
    warning "‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è Django secret key"
fi

if az keyvault secret set \
    --vault-name "$KEY_VAULT_NAME" \
    --name "database-password" \
    --value "$DB_ADMIN_PASSWORD" >/dev/null 2>&1; then
    log "‚úÖ Database password –¥–æ–¥–∞–Ω–æ"
else
    warning "‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è database password"
fi

if az keyvault secret set \
    --vault-name "$KEY_VAULT_NAME" \
    --name "storage-account-key" \
    --value "$STORAGE_KEY" >/dev/null 2>&1; then
    log "‚úÖ Storage account key –¥–æ–¥–∞–Ω–æ"
else
    warning "‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è storage account key"
fi

info "üîÑ –ö–†–û–ö 8/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Application Insights"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Application Insights: ${APP_INSIGHTS_NAME}"
az monitor app-insights component create \
    --app "$APP_INSIGHTS_NAME" \
    --location "$LOCATION" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --tags $TAGS

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è Instrumentation Key
INSTRUMENTATION_KEY=$(az monitor app-insights component show \
    --app "$APP_INSIGHTS_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --query "instrumentationKey" \
    --output tsv)

info "üîÑ –ö–†–û–ö 9/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è App Service Plan (–ë–ï–ó–ö–û–®–¢–û–í–ù–ò–ô F1)"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è App Service Plan: ${APP_SERVICE_PLAN_NAME}"
warning "–í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î—Ç—å—Å—è –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∏–π –ø–ª–∞–Ω F1 –∑ –æ–±–º–µ–∂–µ–Ω–Ω—è–º–∏!"
az appservice plan create \
    --name "$APP_SERVICE_PLAN_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --location "$LOCATION" \
    --sku "$APP_SERVICE_SKU" \
    --is-linux \
    --tags $TAGS

info "üîÑ –ö–†–û–ö 10/11: –°—Ç–≤–æ—Ä–µ–Ω–Ω—è Web App"
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è Web App: ${WEB_APP_NAME}"
az webapp create \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --plan "$APP_SERVICE_PLAN_NAME" \
    --runtime "PYTHON:${PYTHON_VERSION}" \
    --tags $TAGS

info "üîÑ –ö–†–û–ö 11/11: –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫—É"
log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–º—ñ–Ω–Ω–∏—Ö —Å–µ—Ä–µ–¥–æ–≤–∏—â–∞"
DATABASE_URL="postgresql://${DB_ADMIN_USER}:${DB_ADMIN_PASSWORD}@${DATABASE_SERVER_NAME}.postgres.database.azure.com:5432/${DATABASE_NAME}?sslmode=require"

az webapp config appsettings set \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --settings \
        DJANGO_SETTINGS_MODULE="config.settings.budget" \
        SECRET_KEY="@Microsoft.KeyVault(VaultName=${KEY_VAULT_NAME};SecretName=django-secret-key)" \
        DATABASE_URL="$DATABASE_URL" \
        AZURE_STORAGE_ACCOUNT_NAME="$STORAGE_ACCOUNT_NAME" \
        AZURE_STORAGE_ACCOUNT_KEY="@Microsoft.KeyVault(VaultName=${KEY_VAULT_NAME};SecretName=storage-account-key)" \
        AZURE_STORAGE_CONTAINER_STATIC="static" \
        AZURE_STORAGE_CONTAINER_MEDIA="media" \
        APPINSIGHTS_INSTRUMENTATIONKEY="$INSTRUMENTATION_KEY" \
        APPLICATIONINSIGHTS_CONNECTION_STRING="InstrumentationKey=${INSTRUMENTATION_KEY}" \
        DEBUG="False" \
        ALLOWED_HOSTS="${WEB_APP_NAME}.azurewebsites.net" \
        DJANGO_LOG_LEVEL="WARNING" \
        PYTHONPATH="/home/site/wwwroot"

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è startup –∫–æ–º–∞–Ω–¥–∏ –¥–ª—è –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É
log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±—é–¥–∂–µ—Ç–Ω–æ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó App Service"
az webapp config set \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --startup-file "gunicorn --bind=0.0.0.0 --timeout 300 --workers 1 config.wsgi"

# –û–±–º–µ–∂–µ–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è –¥–ª—è –µ–∫–æ–Ω–æ–º—ñ—ó —Ä–µ—Å—É—Ä—Å—ñ–≤
az webapp log config \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --application-logging filesystem \
    --level warning \
    --detailed-error-messages false \
    --failed-request-tracing false \
    --web-server-logging off

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è managed identity
log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è Managed Identity"
az webapp identity assign \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME"

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è Principal ID —Ç–∞ –Ω–∞–¥–∞–Ω–Ω—è –¥–æ—Å—Ç—É–ø—É –¥–æ Key Vault
PRINCIPAL_ID=$(az webapp identity show \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --query "principalId" \
    --output tsv)

az keyvault set-policy \
    --name "$KEY_VAULT_NAME" \
    --object-id "$PRINCIPAL_ID" \
    --secret-permissions get list

# –£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è HTTPS
log "–£–≤—ñ–º–∫–Ω–µ–Ω–Ω—è HTTPS"
az webapp update \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --https-only true

# =============================================================================
# –°–¢–í–û–†–ï–ù–ù–Ø –ë–Æ–î–ñ–ï–¢–ù–ò–• –§–ê–ô–õ–Ü–í –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–á
# =============================================================================

log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó"

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –º—ñ–Ω—ñ–º–∞–ª—å–Ω–æ–≥–æ requirements.txt –¥–ª—è –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É
cat > requirements.txt << 'EOF'
# –ë–Æ–î–ñ–ï–¢–ù–ê –í–ï–†–°–Ü–Ø - –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ
Django>=4.2,<5.0
psycopg2-binary>=2.9.0
gunicorn>=20.1.0
django-storages[azure]>=1.13.0
python-decouple>=3.6
whitenoise>=6.0.0
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è .env.example –¥–ª—è –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É
cat > .env.budget << EOF
# –ë–Æ–î–ñ–ï–¢–ù–ê –ö–û–ù–§–Ü–ì–£–†–ê–¶–Ü–Ø DJANGO
SECRET_KEY=your-secret-key-here
DEBUG=False
ALLOWED_HOSTS=${WEB_APP_NAME}.azurewebsites.net

# Database (–±—é–¥–∂–µ—Ç–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è)
DATABASE_URL=postgresql://user:password@host:port/database

# Azure Storage (–±—é–¥–∂–µ—Ç–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è)
AZURE_STORAGE_ACCOUNT_NAME=${STORAGE_ACCOUNT_NAME}
AZURE_STORAGE_ACCOUNT_KEY=your-storage-key
AZURE_STORAGE_CONTAINER_STATIC=static
AZURE_STORAGE_CONTAINER_MEDIA=media

# Application Insights (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–∞ –≤–µ—Ä—Å—ñ—è)
APPINSIGHTS_INSTRUMENTATIONKEY=${INSTRUMENTATION_KEY}

# –ë—é–¥–∂–µ—Ç–Ω—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è
DJANGO_LOG_LEVEL=WARNING
WORKERS=1
TIMEOUT=300
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ startup.sh
cat > startup.sh << 'EOF'
#!/bin/bash
# –ë–Æ–î–ñ–ï–¢–ù–ò–ô STARTUP –°–ö–†–ò–ü–¢

echo "Starting Django application in BUDGET mode..."

# –®–≤–∏–¥–∫–µ –∑–±–∏—Ä–∞–Ω–Ω—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤
python manage.py collectstatic --noinput --clear

# –ó–∞–ø—É—Å–∫ –º—ñ–≥—Ä–∞—Ü—ñ–π
python manage.py migrate --noinput

# –ë—é–¥–∂–µ—Ç–Ω–∏–π –∑–∞–ø—É—Å–∫ –∑ –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–º–∏ —Ä–µ—Å—É—Ä—Å–∞–º–∏
exec gunicorn --bind=0.0.0.0:8000 --timeout 300 --workers 1 --max-requests 1000 --max-requests-jitter 100 config.wsgi:application
EOF

chmod +x startup.sh

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç–Ω–∏—Ö Django settings
cat > budget_settings.py << 'EOF'
"""
–ë–Æ–î–ñ–ï–¢–ù–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø DJANGO
–û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–æ –¥–ª—è –º—ñ–Ω—ñ–º–∞–ª—å–Ω–∏—Ö –≤–∏—Ç—Ä–∞—Ç –Ω–∞ Azure F1 + B1ms
"""

from decouple import config
import os

# –ë–ê–ó–û–í–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø
DEBUG = config('DEBUG', default=False, cast=bool)
SECRET_KEY = config('SECRET_KEY')
ALLOWED_HOSTS = config('ALLOWED_HOSTS', default='').split(',')

# –ë–Æ–î–ñ–ï–¢–ù–ê –ë–ê–ó–ê –î–ê–ù–ò–•
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': config('DATABASE_URL'),
        'CONN_MAX_AGE': 600,  # –ü–µ—Ä–µ—ñ—Å–ø–æ–ª—å–∑—É–≤–∞–Ω–Ω—è –∑'—î–¥–Ω–∞–Ω—å
        'OPTIONS': {
            'MAX_CONNS': 2,   # –ú—ñ–Ω—ñ–º—É–º –∑'—î–¥–Ω–∞–Ω—å –¥–ª—è B1ms
        }
    }
}

# –ë–Æ–î–ñ–ï–¢–ù–Ü –ú–ï–î–Ü–ê –§–ê–ô–õ–ò
DEFAULT_FILE_STORAGE = 'storages.backends.azure_storage.AzureStorage'
STATICFILES_STORAGE = 'django.contrib.staticfiles.storage.StaticFilesStorage'

# Azure Storage (—Ç—ñ–ª—å–∫–∏ –¥–ª—è –º–µ–¥—ñ–∞, —Å—Ç–∞—Ç–∏–∫–∞ —á–µ—Ä–µ–∑ whitenoise)
AZURE_ACCOUNT_NAME = config('AZURE_STORAGE_ACCOUNT_NAME')
AZURE_ACCOUNT_KEY = config('AZURE_STORAGE_ACCOUNT_KEY')
AZURE_CONTAINER = config('AZURE_STORAGE_CONTAINER_MEDIA')

# Whitenoise –¥–ª—è —Å—Ç–∞—Ç–∏—á–Ω–∏—Ö —Ñ–∞–π–ª—ñ–≤ (–µ–∫–æ–Ω–æ–º—ñ—è –Ω–∞ Storage –æ–ø–µ—Ä–∞—Ü—ñ—è—Ö)
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'whitenoise.middleware.WhiteNoiseMiddleware',  # –ë—é–¥–∂–µ—Ç–Ω–∞ —Å—Ç–∞—Ç–∏–∫–∞
    # ... —ñ–Ω—à—ñ middleware
]

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# –ë–Æ–î–ñ–ï–¢–ù–ï –ö–ï–®–£–í–ê–ù–ù–Ø (–±–µ–∑ Redis - –µ–∫–æ–Ω–æ–º—ñ—è –∫–æ—à—Ç—ñ–≤)
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.locmem.LocMemCache',
        'LOCATION': 'budget-cache',
        'OPTIONS': {
            'MAX_ENTRIES': 300,  # –û–±–º–µ–∂–µ–Ω–∏–π –∫–µ—à
        }
    }
}

# –ú–Ü–ù–Ü–ú–ê–õ–¨–ù–ï –õ–û–ì–£–í–ê–ù–ù–Ø
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'console': {
            'class': 'logging.StreamHandler',
            'level': 'WARNING',  # –¢—ñ–ª—å–∫–∏ –ø–æ–ø–µ—Ä–µ–¥–∂–µ–Ω–Ω—è —Ç–∞ –ø–æ–º–∏–ª–∫–∏
        },
    },
    'root': {
        'handlers': ['console'],
        'level': 'WARNING',
    },
}

# –ë–Æ–î–ñ–ï–¢–ù–Ü –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø –ü–†–û–î–£–ö–¢–ò–í–ù–û–°–¢–Ü
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
SESSION_CACHE_ALIAS = 'default'
SESSION_COOKIE_AGE = 1209600  # 2 —Ç–∏–∂–Ω—ñ

# –í–∏–º–∫–Ω–µ–Ω–Ω—è DEBUG toolbar —Ç–∞ —ñ–Ω—à–∏—Ö dev —ñ–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ñ–≤ –≤ budget —Ä–µ–∂–∏–º—ñ
INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # –ú—ñ–Ω—ñ–º–∞–ª—å–Ω–∏–π –Ω–∞–±—ñ—Ä –¥–ª—è –±—é–¥–∂–µ—Ç–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É
]
EOF

# =============================================================================
# –°–¢–í–û–†–ï–ù–ù–Ø CLEANUP –°–ö–†–ò–ü–¢–£
# =============================================================================

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è cleanup —Å–∫—Ä–∏–ø—Ç—É
cat > cleanup_budget_infrastructure.sh << 'EOF'
#!/bin/bash
# –°–∫—Ä–∏–ø—Ç –≤–∏–¥–∞–ª–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç–Ω–æ—ó —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏

RESOURCE_GROUP_NAME="$RESOURCE_GROUP_NAME"

echo "üóëÔ∏è  –í–∏–¥–∞–ª–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç–Ω–æ—ó —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∏..."
echo "Resource Group: $RESOURCE_GROUP_NAME"

read -p "–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –≤–∏–¥–∞–ª–µ–Ω–Ω—è (yes/no): " confirmation
if [[ "$confirmation" == "yes" ]]; then
    az group delete --name "$RESOURCE_GROUP_NAME" --yes --no-wait
    echo "‚úÖ –ë—é–¥–∂–µ—Ç–Ω–∞ —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø–æ–º—ñ—á–µ–Ω–∞ –¥–ª—è –≤–∏–¥–∞–ª–µ–Ω–Ω—è"
else
    echo "‚ùå –û–ø–µ—Ä–∞—Ü—ñ—è —Å–∫–∞—Å–æ–≤–∞–Ω–∞"
fi
EOF

chmod +x cleanup_budget_infrastructure.sh

# =============================================================================
# –ü–Ü–î–°–£–ú–û–ö –ë–Æ–î–ñ–ï–¢–ù–û–ì–û –†–û–ó–ì–û–†–¢–ê–ù–ù–Ø
# =============================================================================

# –û—Ç—Ä–∏–º–∞–Ω–Ω—è URL –¥–æ–¥–∞—Ç–∫—É
APP_URL=$(az webapp show \
    --name "$WEB_APP_NAME" \
    --resource-group "$RESOURCE_GROUP_NAME" \
    --query "defaultHostName" \
    --output tsv)

log "‚úÖ –ë–Æ–î–ñ–ï–¢–ù–ê —ñ–Ω—Ñ—Ä–∞—Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–∞!"

echo ""
echo -e "${GREEN}============================================${NC}"
echo -e "${GREEN}üí∞ –ë–Æ–î–ñ–ï–¢–ù–ï –†–û–ó–ì–û–†–¢–ê–ù–ù–Ø –ó–ê–í–ï–†–®–ï–ù–û!${NC}"
echo -e "${GREEN}============================================${NC}"
echo ""
echo -e "${CYAN}üíµ –û–†–Ü–Ñ–ù–¢–û–í–ù–ê –í–ê–†–¢–Ü–°–¢–¨: $20-25/–º—ñ—Å—è—Ü—å${NC}"
echo ""
echo "üìã –°–¢–í–û–†–ï–ù–Ü –†–ï–°–£–†–°–ò:"
echo "üåç Resource Group: $RESOURCE_GROUP_NAME"
echo "üöÄ Web App: $WEB_APP_NAME (F1 - –±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ)"
echo "üîó URL: https://$APP_URL"
echo "üìä App Service Plan: $APP_SERVICE_PLAN_NAME (F1)"
echo "üóÑÔ∏è  PostgreSQL Server: $DATABASE_SERVER_NAME (B1ms - ~$12-15)"
echo "üóÉÔ∏è  Database: $DATABASE_NAME"
echo "üíæ Storage Account: $STORAGE_ACCOUNT_NAME (LRS - ~$2-5)"
echo "üîê Key Vault: $KEY_VAULT_NAME (~$1)"
echo "üìà Application Insights: $APP_INSIGHTS_NAME (–±–µ–∑–∫–æ—à—Ç–æ–≤–Ω–æ –¥–æ 5GB)"
echo ""
echo -e "${YELLOW}‚ö†Ô∏è  –û–ë–ú–ï–ñ–ï–ù–ù–Ø –ë–Æ–î–ñ–ï–¢–ù–û–á –í–ï–†–°–Ü–á:${NC}"
echo "- F1 –ø–ª–∞–Ω: 60 —Ö–≤–∏–ª–∏–Ω CPU/–¥–µ–Ω—å, 1GB RAM"
echo "- B1ms DB: 1 vCore, 2GB RAM, 32GB storage"
echo "- –ë–µ–∑ Always On (cold start –º–æ–∂–ª–∏–≤–∏–π)"
echo "- –û–±–º–µ–∂–µ–Ω–µ –ª–æ–≥—É–≤–∞–Ω–Ω—è"
echo "- 1 worker process"
echo ""
echo "üìÅ –°–¢–í–û–†–ï–ù–Ü –§–ê–ô–õ–ò:"
echo "  ‚úÖ requirements.txt - –º—ñ–Ω—ñ–º–∞–ª—å–Ω—ñ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ"
echo "  ‚úÖ .env.budget - –±—é–¥–∂–µ—Ç–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è"
echo "  ‚úÖ startup.sh - –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π startup"
echo "  ‚úÖ budget_settings.py - –±—é–¥–∂–µ—Ç–Ω—ñ Django settings"
echo "  ‚úÖ cleanup_budget_infrastructure.sh - –≤–∏–¥–∞–ª–µ–Ω–Ω—è"
echo ""
echo "üîß –î–û–°–¢–£–ü–ò:"
echo "Database Admin User: $DB_ADMIN_USER"
echo "Database Admin Password: $DB_ADMIN_PASSWORD"
echo ""
echo "üöÄ –ù–ê–°–¢–£–ü–ù–Ü –ö–†–û–ö–ò:"
echo "1. –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ budget_settings.py —É –≤–∞—à–æ–º—É Django –ø—Ä–æ–µ–∫—Ç—ñ"
echo "2. –†–æ–∑–≥–æ—Ä–Ω—ñ—Ç—å –∫–æ–¥: az webapp deployment source config-zip"
echo "3. –ú–æ–Ω—ñ—Ç–æ—Ä—å—Ç–µ –≤–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è CPU (–ª—ñ–º—ñ—Ç 60 —Ö–≤/–¥–µ–Ω—å –¥–ª—è F1)"
echo "4. –ü—Ä–∏ –Ω–µ–æ–±—Ö—ñ–¥–Ω–æ—Å—Ç—ñ –æ–Ω–æ–≤—ñ—Ç—å –¥–æ B1 (~$13/–º—ñ—Å –¥–æ–¥–∞—Ç–∫–æ–≤–æ)"
echo ""
echo -e "${GREEN}–í–∞—à –±—é–¥–∂–µ—Ç–Ω–∏–π Django –¥–æ–¥–∞—Ç–æ–∫ –≥–æ—Ç–æ–≤–∏–π! üêçüí∞${NC}"
echo ""

# –ó–±–µ—Ä–µ–∂–µ–Ω–Ω—è –±—é–¥–∂–µ—Ç–Ω–æ—ó –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
cat > budget-infrastructure-summary.txt << EOF
–ë–Æ–î–ñ–ï–¢–ù–ê AZURE INFRASTRUCTURE SUMMARY
=====================================
Created: $(date)
Project: $PROJECT_NAME (Budget Edition)
Estimated Cost: $20-25/month

Resources:
- Resource Group: $RESOURCE_GROUP_NAME
- Web App: $WEB_APP_NAME (F1 Free)
- URL: https://$APP_URL
- Database Server: $DATABASE_SERVER_NAME (B1ms)
- Database: $DATABASE_NAME
- Storage Account: $STORAGE_ACCOUNT_NAME (LRS)
- Key Vault: $KEY_VAULT_NAME
- Application Insights: $APP_INSIGHTS_NAME

Cost Breakdown:
- App Service F1: $0/month (Free tier)
- PostgreSQL B1ms: $12-15/month
- Storage LRS: $2-5/month
- Key Vault: $1/month
- App Insights: $0/month (up to 5GB)

Limitations:
- F1: 60 CPU minutes/day, 1GB RAM
- No Always On (cold starts possible)
- Limited logging
- Single worker process

Database Credentials:
- Admin User: $DB_ADMIN_USER
- Admin Password: $DB_ADMIN_PASSWORD

Files Created:
- requirements.txt (minimal)
- .env.budget
- startup.sh (optimized)
- budget_settings.py
- cleanup_budget_infrastructure.sh

Next Steps:
1. Use budget_settings.py in your Django project
2. Deploy code with ZIP deployment
3. Monitor CPU usage (60 min/day limit)
4. Upgrade to B1 if needed (+$13/month)
EOF

log "üìÑ –ë—é–¥–∂–µ—Ç–Ω–∞ –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è –∑–±–µ—Ä–µ–∂–µ–Ω–∞ —É —Ñ–∞–π–ª: budget-infrastructure-summary.txt"

